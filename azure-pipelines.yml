# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

parameters:
- name: artifactoryServiceConnection
  type: string
  default: vigneshs
- name: artifactoryPlatformOIDCServiceConnection
  type: string
  default: vigneshs

stages:
- stage: __default
  jobs:
  - job: Job
    steps:
    - script: echo "Hello, World!"
      displayName: 'Run a one-line script'

    - script: |
        echo "Add other tasks to build, test, and deploy your project."
        echo "See https://aka.ms/yaml"
      displayName: 'Run a multi-line script'

    - task: PowerShell@2
      displayName: Install curl dev tools and R
      inputs:
        targetType: inline
        script: sudo apt update && sudo apt-get -y install libcurl4-openssl-dev r-base-core
        pwsh: true

    - task: PowerShell@2
      displayName: Allow installation to hosts R library
      inputs:
        targetType: inline
        script: sudo chmod -R 777 /usr/local/lib/R
        pwsh: true
    - task: JfrogCliV2@1
      displayName: Configure JFrog CLI with OIDC token and ping Artifactory
      inputs:
        jfrogPlatformConnection: 'jfrog-cli'
        command: 'jf rt curl -XGET "api/v1/ping"'

    - task: PowerShell@2
      displayName: Show OIDC details
      inputs:
        targetType: inline
        script: |
          echo "OIDC Username: $(jfStep.oidc_user)"
          echo "OIDC Token: $(oidc_token)"
        pwsh: true

    - task: PowerShell@2
      displayName: Create CRAN download script
      inputs:
        targetType: inline
        script: |
          $rscript = @'
            #!/usr/bin/env Rscript
            local({
                r <- list("cran-remote" = "http://localhost:8081/artifactory/cran-remote/")
                options(repos = r)
            })
            install.packages("ps", lib = "/usr/local/lib/R/site-library", repos = "http://localhost:8081/artifactory/cran-remote/")
            quit(status=0)
          '@
          Set-Content -Path './install_from_cran_remote.r' -Value $rscript
        pwsh: true

    - task: CmdLine@2
      displayName: Install ps from CRAN remote
      continueOnError: true
      inputs:
        script: |
          Rscript install_from_cran_remote.r

    - task: CmdLine@2
      displayName: Show R site-library
      inputs:
        script: |
          echo "/usr/local/lib/R/site-library"
          ls -al /usr/local/lib/R/site-library